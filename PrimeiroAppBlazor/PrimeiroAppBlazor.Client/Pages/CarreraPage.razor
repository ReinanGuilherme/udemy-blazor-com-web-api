@page "/"
@using PrimeiroAppBlazor.Library
@using PrimeiroAppBlazor.Client.Components.Carrera

<PageTitle>Carrera</PageTitle>

<h1>Pagina Carrera</h1>

<FormCarrera OnGuardar="Guardar" />



@if(listacarrera is null)
{
    <h1>Carregando...</h1>
} else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Description</th>
                <th>Operaciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var carrera in listacarrera)
            {
                <tr>
                    <td>@carrera.idcarrera</td>
                    <td>@carrera.nombrecarrera</td>
                    <td>@carrera.descripcioncarrera</td>
                    <td>
                        <button class="btn btn-danger"
                                @onclick="(() => Eliminar(carrera.idcarrera))">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    public List<CarreraCLS> listacarrera { get; set; }

    // quando o componente inicia o carregamente ou finaliza
    protected override async Task OnInitializedAsync()
    {

        listacarrera = new List<CarreraCLS>();

        listacarrera.Add(new CarreraCLS { 
            idcarrera = 1, 
            nombrecarrera = "Informatica", 
            descripcioncarrera = "Desc 1" 
        });

        listacarrera.Add(new CarreraCLS
            {
                idcarrera = 2,
                nombrecarrera = "Medicina",
                descripcioncarrera = "Desc 2"
            });

        await Task.CompletedTask;
    }

    public async Task Guardar(CarreraCLS carreraCLS)
    {
        listacarrera.Add(carreraCLS);     
        await Task.CompletedTask;
    }

    public async Task Eliminar(int idcarrera)
    {
        var data = listacarrera.Where(p => p.idcarrera != idcarrera).ToList();
        listacarrera = data;

        await Task.CompletedTask;
    }

   
}